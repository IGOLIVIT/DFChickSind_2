//
//  DataManager.swift
//  DFChickSind_2
//
//  Created by IGOR on 03/09/2025.
//

import Foundation
import SwiftUI
import UIKit

struct DataManager {
    
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    
    /// AppsFlyer Dev Key - –ø–æ–ª—É—á–∏—Ç—å –≤ –ø–∞–Ω–µ–ª–∏ AppsFlyer
    static let appsFlyerDevKey = "cqTiFvvyhL5a2SNAqqAna3"
    
    ///  App ID - ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ AppstoreConnect
    static let appleAppID = "id6749934948"
    
    /// –≠–Ω–¥–ø–æ–∏–Ω—Ç –∫–æ–Ω—Ñ–∏–≥–∞ - –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    static let configEndpoint = "https://linguisticboostroad.com/config.php"
    
    /// Firebase Project ID - –ø–æ–ª—É—á–∏—Ç—å –∏–∑ GoogleService-Info.plist
    static let firebaseProjectID = "df702-379db"
    
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    // MARK: - üîë –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–¨!)
    
    
    
    
    
    
    
    
    /// –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    static let notificationRetryInterval: TimeInterval = 259200 // 3 –¥–Ω—è
    
    /// –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ AppsFlyer (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    static let conversionRecheckDelay: TimeInterval = 5.0
    
    /// –¢–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
    static let trackingPermissionTimeout: TimeInterval = 60.0
    
    // MARK: - üé® UI –ù–ê–°–¢–†–û–ô–ö–ò
    
    /// –¶–≤–µ—Ç–∞ –¥–ª—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤
    struct Colors {
        static let primaryGradient = [Color.blue.opacity(0.8), Color.purple.opacity(0.8)]
        static let loadingGradient = [
            Color(red: 0.05, green: 0.1, blue: 0.2),
            Color(red: 0.1, green: 0.05, blue: 0.15),
            Color(red: 0.05, green: 0.05, blue: 0.1)
        ]
        static let notificationGradient = [
            Color(red: 0.1, green: 0.2, blue: 0.4),
            Color(red: 0.2, green: 0.1, blue: 0.3),
            Color(red: 0.1, green: 0.1, blue: 0.2)
        ]
    }
    
    // MARK: - üîß –°–õ–£–ñ–ï–ë–ù–´–ï –ú–ï–¢–û–î–´
    
    /// –ü–æ–ª—É—á–∏—Ç—å Bundle ID –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞
    static var currentBundleID: String {
        return Bundle.main.bundleIdentifier ?? "bundleID"
    }
    
    /// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞
    static var currentAppName: String {
        if let displayName = Bundle.main.object(forInfoDictionaryKey: "CFBundleDisplayName") as? String {
            return displayName
        } else if let bundleName = Bundle.main.object(forInfoDictionaryKey: "CFBundleName") as? String {
            return bundleName
        } else {
            return "appName"
        }
    }
    
    /// –°–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π User Agent
    static func createCustomUserAgent() -> String {
        let systemVersion = UIDevice.current.systemVersion
        let deviceModel = UIDevice.current.model
        
        return "Mozilla/5.0 (\(deviceModel); CPU OS \(systemVersion.replacingOccurrences(of: ".", with: "_")) like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/\(systemVersion) Mobile/15E148 Safari/604.1"
    }
    
    /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
    static func validateConfiguration() -> [String] {
        var errors: [String] = []
        
        if appsFlyerDevKey == "YOUR_APPSFLYER_DEV_KEY" {
            errors.append("‚ùå AppsFlyer Dev Key –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        }
        
        if appleAppID == "YOUR_APPLE_APP_ID" {
            errors.append("‚ùå Apple App ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        }
        
        if configEndpoint == "https://example.com/config" {
            errors.append("‚ùå Config Endpoint –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        }
        
        if firebaseProjectID == "YOUR_FIREBASE_PROJECT_ID" {
            errors.append("‚ùå Firebase Project ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        }
        
        return errors
    }
    
    /// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ SDK
    static func validateSDKStatus() -> [String] {
        var warnings: [String] = []
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ AppsFlyer SDK
        let appsFlyerConnected = true // Production: AppsFlyer SDK –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
        if !appsFlyerConnected {
            warnings.append("‚ö†Ô∏è AppsFlyer SDK –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase SDK
        let firebaseConnected = true // Production: Firebase SDK –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
        if !firebaseConnected {
            warnings.append("‚ö†Ô∏è Firebase SDK –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        }
        
        return warnings
    }
    
    /// –í—ã–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ SDK
    static func printFullStatus() {
        print("üöÄ === PRODUCTION STATUS ===")
        print("Bundle ID: \(currentBundleID)")
        print("App Name: \(currentAppName)")
        print("AppsFlyer Dev Key: \(appsFlyerDevKey.prefix(8))...")
        print("Config Endpoint: \(configEndpoint)")
        print("Firebase Project ID: \(firebaseProjectID)")
        
        let configErrors = validateConfiguration()
        let sdkWarnings = validateSDKStatus()
        
        if configErrors.isEmpty && sdkWarnings.isEmpty {
            print("‚úÖ PRODUCTION READY - All systems operational!")
        } else {
            if !configErrors.isEmpty {
                print("‚ö†Ô∏è Configuration issues:")
                configErrors.forEach { print($0) }
            }
            if !sdkWarnings.isEmpty {
                print("üì¶ SDK Status:")
                sdkWarnings.forEach { print($0) }
            }
        }
        
        print("================================")
    }
}
